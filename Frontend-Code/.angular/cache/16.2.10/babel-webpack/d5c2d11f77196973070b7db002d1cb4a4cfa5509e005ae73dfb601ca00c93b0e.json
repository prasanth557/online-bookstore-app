{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/bookstore-service.service\";\nimport * as i3 from \"@angular/router\";\nexport class EditBooksComponent {\n  constructor(fb, bookservice, router) {\n    this.fb = fb;\n    this.bookservice = bookservice;\n    this.router = router;\n    this.bookForm = this.fb.group({\n      title: ['', Validators.required],\n      author: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    // if (this.bookForm.valid) {\n    //   // Send form data to the backend \n    //   this.bookservice.addBook(this.bookForm.value).subscribe(() => {\n    //     // Navigate back to the table view after submission\n    //     this.router.navigate(['/home']);\n    //   });\n    // }\n    console.log(\"Submit clicked\");\n  }\n  static #_ = this.ɵfac = function EditBooksComponent_Factory(t) {\n    return new (t || EditBooksComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.BookstoreServiceService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditBooksComponent,\n    selectors: [[\"app-edit-books\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\"], [\"for\", \"author\"], [\"type\", \"text\", \"id\", \"author\", \"formControlName\", \"author\"], [\"type\", \"submit\"]],\n    template: function EditBooksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Add New Book\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function EditBooksComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"label\", 1);\n        i0.ɵɵtext(4, \"Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementStart(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Author:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵtext(10, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.bookForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","EditBooksComponent","constructor","fb","bookservice","router","bookForm","group","title","required","author","onSubmit","console","log","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","BookstoreServiceService","i3","Router","_2","selectors","decls","vars","consts","template","EditBooksComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditBooksComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\003KS4744\\source\\bookstore-app\\src\\app\\components\\edit-books\\edit-books.component.ts","C:\\Users\\003KS4744\\source\\bookstore-app\\src\\app\\components\\edit-books\\edit-books.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BookstoreServiceService } from 'src/app/services/bookstore-service.service';\n\n@Component({\n  selector: 'app-edit-books',\n  templateUrl: './edit-books.component.html',\n  styleUrls: ['./edit-books.component.css']\n})\nexport class EditBooksComponent {\n  bookForm: FormGroup;\n\n  constructor(private fb: FormBuilder,private bookservice:BookstoreServiceService,private router: Router) {\n    this.bookForm = this.fb.group({\n      title: ['', Validators.required],\n      author: ['', Validators.required],\n    });\n  }\n\n  onSubmit() {\n    // if (this.bookForm.valid) {\n    //   // Send form data to the backend \n    //   this.bookservice.addBook(this.bookForm.value).subscribe(() => {\n    //     // Navigate back to the table view after submission\n    //     this.router.navigate(['/home']);\n    //   });\n    // }\n\n    console.log(\"Submit clicked\")\n}\n\n\n}\n","<h2>Add New Book</h2>\n<form [formGroup]=\"bookForm\" (ngSubmit)=\"onSubmit()\">\n  <label for=\"title\">Title:</label>\n  <input type=\"text\" id=\"title\" formControlName=\"title\" />\n\n  <label for=\"author\">Author:</label>\n  <input type=\"text\" id=\"author\" formControlName=\"author\" />\n\n  <button type=\"submit\">Submit</button>\n</form>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,EAAe,EAASC,WAAmC,EAASC,MAAc;IAAlF,KAAAF,EAAE,GAAFA,EAAE;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAAiC,KAAAC,MAAM,GAANA,MAAM;IAC5F,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC5BC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAChCC,MAAM,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACjC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IAEAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EACjC;EAAC,QAAAC,CAAA,G;qBApBYb,kBAAkB,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,uBAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBtB,kBAAkB;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV/Bf,EAAA,CAAAiB,cAAA,SAAI;QAAAjB,EAAA,CAAAkB,MAAA,mBAAY;QAAAlB,EAAA,CAAAmB,YAAA,EAAK;QACrBnB,EAAA,CAAAiB,cAAA,cAAqD;QAAxBjB,EAAA,CAAAoB,UAAA,sBAAAC,qDAAA;UAAA,OAAYL,GAAA,CAAApB,QAAA,EAAU;QAAA,EAAC;QAClDI,EAAA,CAAAiB,cAAA,eAAmB;QAAAjB,EAAA,CAAAkB,MAAA,aAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACjCnB,EAAA,CAAAsB,SAAA,eAAwD;QAExDtB,EAAA,CAAAiB,cAAA,eAAoB;QAAAjB,EAAA,CAAAkB,MAAA,cAAO;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACnCnB,EAAA,CAAAsB,SAAA,eAA0D;QAE1DtB,EAAA,CAAAiB,cAAA,gBAAsB;QAAAjB,EAAA,CAAAkB,MAAA,cAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAPjCnB,EAAA,CAAAuB,SAAA,GAAsB;QAAtBvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAAzB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}