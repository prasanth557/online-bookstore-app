{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookstoreServiceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:55405/api/books'; // JSON Server URL\n  }\n\n  getBooks() {\n    return this.http.get(`${this.apiUrl}`);\n  }\n  // Implement CRUD operations\n  getBook(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  addBook(book) {\n    return this.http.post(this.apiUrl, book);\n  }\n  updateBook(id, book) {\n    return this.http.put(`${this.apiUrl}/${id}`, book);\n  }\n  deleteBook(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function BookstoreServiceService_Factory(t) {\n    return new (t || BookstoreServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookstoreServiceService,\n    factory: BookstoreServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BookstoreServiceService","constructor","http","apiUrl","getBooks","get","getBook","id","addBook","book","post","updateBook","put","deleteBook","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\003KS4744\\source\\bookstore-app\\src\\app\\services\\bookstore-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookstoreServiceService {\n\n  private apiUrl = 'http://localhost:55405/api/books'; // JSON Server URL\n\n  constructor(private http: HttpClient) {}\n\n  getBooks(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}`);\n  }\n  // Implement CRUD operations\n  getBook(id: number): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\n  }\n  \n  addBook(book: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl, book);\n  }\n\n  updateBook(id: number, book: any): Observable<any> {\n    return this.http.put<any>(`${this.apiUrl}/${id}`, book);\n  }\n\n  deleteBook(id: number): Observable<any> {\n    return this.http.delete<any>(`${this.apiUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,uBAAuB;EAIlCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC,CAAC,CAAC;EAEd;;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,EAAE,CAAC;EAC/C;EACA;EACAG,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACnD;EAEAC,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,IAAI,CAACP,MAAM,EAAEM,IAAI,CAAC;EAC/C;EAEAE,UAAUA,CAACJ,EAAU,EAAEE,IAAS;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAM,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,IAAI,CAAC;EACzD;EAEAI,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAM,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACtD;EAAC,QAAAQ,CAAA,G;qBAxBUf,uBAAuB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAvBpB,uBAAuB;IAAAqB,OAAA,EAAvBrB,uBAAuB,CAAAsB,IAAA;IAAAC,UAAA,EAFtB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}