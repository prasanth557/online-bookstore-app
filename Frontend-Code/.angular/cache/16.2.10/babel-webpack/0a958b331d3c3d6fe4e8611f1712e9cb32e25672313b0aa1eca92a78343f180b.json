{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/bookstore-service.service\";\nimport * as i3 from \"@angular/router\";\nexport class EditBooksComponent {\n  constructor(fb, bookservice, router, route) {\n    this.fb = fb;\n    this.bookservice = bookservice;\n    this.router = router;\n    this.route = route;\n    this.bookForm = this.fb.group({\n      title: ['', Validators.required],\n      author: ['', Validators.required]\n    });\n  }\n  ngOnChanges() {\n    // Update form values when a book is selected for update\n    if (this.selectedBook) {\n      this.bookForm.patchValue(this.selectedBook);\n    }\n  }\n  onSubmit() {\n    if (this.bookForm.valid) {\n      if (this.selectedBook) {\n        // Update existing book\n        this.bookservice.updateBook(this.selectedBook.id, this.bookForm.value).subscribe(() => {\n          this.router.navigate(['/home']);\n        });\n      } else {\n        // Add new book\n        this.bookservice.addBook(this.bookForm.value).subscribe(() => {\n          this.router.navigate(['/home']);\n        });\n      }\n    }\n  }\n  static #_ = this.ɵfac = function EditBooksComponent_Factory(t) {\n    return new (t || EditBooksComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.BookstoreServiceService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditBooksComponent,\n    selectors: [[\"app-edit-books\"]],\n    inputs: {\n      selectedBook: \"selectedBook\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 11,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\"], [\"for\", \"author\"], [\"type\", \"text\", \"id\", \"author\", \"formControlName\", \"author\"], [\"type\", \"submit\"]],\n    template: function EditBooksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function EditBooksComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"label\", 1);\n        i0.ɵɵtext(4, \"Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementStart(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Author:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.selectedBook ? \"Update Book\" : \"Add New Book\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.bookForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.selectedBook ? \"Update\" : \"Submit\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","EditBooksComponent","constructor","fb","bookservice","router","route","bookForm","group","title","required","author","ngOnChanges","selectedBook","patchValue","onSubmit","valid","updateBook","id","value","subscribe","navigate","addBook","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","BookstoreServiceService","i3","Router","ActivatedRoute","_2","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","EditBooksComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditBooksComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["C:\\Users\\003KS4744\\source\\bookstore-app\\src\\app\\components\\edit-books\\edit-books.component.ts","C:\\Users\\003KS4744\\source\\bookstore-app\\src\\app\\components\\edit-books\\edit-books.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BookstoreServiceService } from 'src/app/services/bookstore-service.service';\n\n@Component({\n  selector: 'app-edit-books',\n  templateUrl: './edit-books.component.html',\n  styleUrls: ['./edit-books.component.css']\n})\nexport class EditBooksComponent {\n  @Input() selectedBook: any; // Input property to receive selected book for update\n\n  bookForm: FormGroup;\n\n  constructor(private fb: FormBuilder,private bookservice:BookstoreServiceService,private router: Router\n    ,private route: ActivatedRoute) {\n    this.bookForm = this.fb.group({\n      title: ['', Validators.required],\n      author: ['', Validators.required],\n    });\n  }\n  ngOnChanges() {\n    // Update form values when a book is selected for update\n    if (this.selectedBook) {\n      this.bookForm.patchValue(this.selectedBook);\n    }\n  }\n  onSubmit() {\n    if (this.bookForm.valid) {\n      if (this.selectedBook) {\n        // Update existing book\n        this.bookservice.updateBook(this.selectedBook.id, this.bookForm.value).subscribe(() => {\n          this.router.navigate(['/home']);\n        });\n      } else {\n        // Add new book\n        this.bookservice.addBook(this.bookForm.value).subscribe(() => {\n          this.router.navigate(['/home']);\n        });\n      }\n    }\n  }\n\n\n}\n","\n<h2>{{ selectedBook ? 'Update Book' : 'Add New Book' }}</h2>\n<form [formGroup]=\"bookForm\" (ngSubmit)=\"onSubmit()\">\n  <label for=\"title\">Title:</label>\n  <input type=\"text\" id=\"title\" formControlName=\"title\" />\n\n  <label for=\"author\">Author:</label>\n  <input type=\"text\" id=\"author\" formControlName=\"author\" />\n\n  <button type=\"submit\">{{ selectedBook ? 'Update' : 'Submit' }}</button>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}